<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"  value="%d{yyyy-MM-dd HH:mm:ss} %p [%l] - %m %n"/>
        </layout>

        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMin" value="INFO" />
            <param name="LevelMax" value="ERROR"/>
        </filter>
    </appender>

    <!--DEBUG级别日志 按每小时滚动-->
    <appender name="DEBUGFILE"
              class="org.apache.log4j.DailyRollingFileAppender">
        <param name="File" value="/opt/logs/retention/debug.log"/>
        <param name="DatePattern" value="yyyy-MM-dd"/>
        <param name="Append" value="true"/>
        <param name="Threshold" value="DEBUG"/>
        <param name="Encoding" value="UTF-8"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss}^%c^%m%n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMin" value="DEBUG"/>
            <param name="LevelMax" value="DEBUG"/>
        </filter>
    </appender>

    <!--INFO级别日志 按每小时滚动-->
    <appender name="INFOFILE"
              class="org.apache.log4j.DailyRollingFileAppender">
        <!--日志文件位置-->
        <param name="File" value="/opt/logs/retention/info.log"/>
        <param name="DatePattern" value="yyyy-MM-dd"/>
        <param name="Append" value="true"/>
        <param name="Threshold" value="INFO"/>
        <param name="Encoding" value="UTF-8"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss}^%c^%m%n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMin" value="INFO"/>
            <param name="LevelMax" value="INFO"/>
        </filter>
    </appender>

    <!--异步info级别日志-->
    <appender name="ASYNCINFO" class="org.apache.log4j.AsyncAppender">
        <param name="BufferSize" value="2048"/>
        <appender-ref ref="INFOFILE"/>
    </appender>


    <!--ERROR级别日志,按文件大小滚动-->
    <appender name="ERRORFILE" class="org.apache.log4j.RollingFileAppender">
        <!--是否是追加模式-->
        <param name="Append" value="true"/>
        <!--每个日志文件的大小限制-->
        <param name="MaxFileSize" value="30720KB"/>
        <!--日志文件位置-->
        <param name="File" value="/opt/logs/retention/error.log"/>
        <!--最大日志文件数量，当文件数量超过此数字时，日期最早的文件将被覆盖-->
        <param name="MaxBackupIndex" value="30"/>
        <!--日志级别-->
        <param name="Threshold" value="ERROR"/>
        <param name="Encoding" value="UTF-8"/>
        <!--日志输出格式-->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %p [%l] - %m %n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMin" value="ERROR"/>
            <param name="LevelMax" value="ERROR"/>
        </filter>

    </appender>

    <!--异步ERROR级别日志-->
    <appender name="ASYNCERROR" class="org.apache.log4j.AsyncAppender">
        <param name="BufferSize" value="10240"/>
        <appender-ref ref="ERRORFILE"/>
    </appender>


    <logger name="org.apache">
        <level value="warn"/>
    </logger>
    <logger name="com.mchange">
        <level value="warn"/>
    </logger>

    <logger name="org.apache.zookeeper.ClientCnxn"  additivity="false">
        <level value="warn" />
    </logger>

    <root>
        <!--<level value="DEBUG"/>

        <appender-ref ref="DEBUGFILE"/>-->
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNCINFO"/>
        <appender-ref ref="ASYNCERROR"/>

    </root>

	<!-- 

        # log4j.appender.stdout.layout.ConversionPattern= [QC] %p [%t] %C.%M(%L) | %m%n
        #
        # 如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern，打印参数如下：
        #
        # %m 输出代码中指定的消息
        #
        # %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
        #
        # %r 输出自应用启动到输出该log信息耗费的毫秒数
        #
        # %c 输出所属的类目，通常就是所在类的全名
        #
        # %t 输出产生该日志事件的线程名
        #
        # %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
        #
        # %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
        #
        # %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
        #
        # [QC]是log信息的开头，可以为任意字符，一般为项目简称。
        #
        # 输出的信息
        #
        # [TS] DEBUG [main] AbstractBeanFactory.getBean(189) | Returning cached instance of singleton bean 'MyAutoProxy'

	-->
	
	
</log4j:configuration>